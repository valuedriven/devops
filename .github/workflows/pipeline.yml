name: Pipeline

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: sa-east-1
  
jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2    
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
    - run: npm --prefix frontend install
    - run: npm --prefix frontend test -- --watchAll=false

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2    
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
    - run: npm --prefix frontend install
    - run: npm --prefix frontend run build
    - uses: actions/upload-artifact@v2
      with:
        name: deploy
        path: frontend/build

  deploy:
    runs-on: ubuntu-latest
    needs: [ verify, build ]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ANSIBLE_REMOTE_USER: ec2-user
      ANSIBLE_PRIVATE_KEY_FILE: ambiente/devops-key
      ANSIBLE_HOST_KEY_CHECKING: 'False'
    steps:    
    - uses: actions/download-artifact@v2
      with:
        name: deploy
        path: ambiente/public
    - run: ansible-galaxy collection install -r ambiente/config/requirements.yml
    - run: ansible-playbook ambiente/provisioning.yml -e 'ansible_python_interpreter=/usr/bin/python3'
    - run: ansible-playbook ambiente/install.yml --inventory ambiente/config/inventory.aws_ec2.yml -e 'ansible_python_interpreter=/usr/bin/python3'